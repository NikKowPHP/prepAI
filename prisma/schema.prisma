generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(cuid())
  email             String   @unique
  name              String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  questions         Question[]
  reviews           Review[]
  progressMetrics  ProgressMetrics[]
  objectives      Objective[]
}

model Question {
  id                String   @id @default(cuid())
  userId            String
  content           String
  category          String?
  difficulty        String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  lastReviewed      DateTime?
  reviewInterval    Int      @default(1)
  reviewEase        Float    @default(2.5)
  struggleCount     Int      @default(0)
  lastStruggledAt   DateTime?
  totalStruggleTime Int      @default(0)
  reviewCount       Int      @default(0)
  overdue           Boolean  @default(false)
  weight            Float    @default(1.0)
  topics            String[] @default([])
  user              User     @relation(fields: [userId], references: [id])
  reviews           Review[]
}

model Review {
  id                String   @id @default(cuid())
  questionId        String
  userId            String
  remembered         Boolean
  reviewedAt        DateTime @default(now())
  question          Question @relation(fields: [questionId], references: [id])
  user              User     @relation(fields: [userId], references: [id])
}

model Objective {
  id          String   @id @default(cuid())
  name        String
  description String?
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
}

model ProgressMetrics {
  id                String   @id @default(cuid())
  userId            String
  totalQuestions    Int      @default(0)
  correctAnswers    Int      @default(0)
  incorrectAnswers  Int      @default(0)
  lastReviewedAt    DateTime @default(now())
  user              User     @relation(fields: [userId], references: [id])
}
